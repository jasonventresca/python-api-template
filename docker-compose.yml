services:
  # based on https://blog.sethcorker.com/traefik-routing-for-web-apps/
  reverse-proxy:
    image: traefik:v3.2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
#     - "--log.level=DEBUG"
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=false"
    restart: always
  
  base:
    build:
      context: .
      dockerfile: base.Dockerfile
    image: local/base:latest

  x-api-1-base: &api-1-base
    image: fastapi-app-1:latest
    build:
      context: .
      dockerfile: api-1.Dockerfile
    container_name: fastapi-app-1
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi-app-1.rule=Host(`api.localhost`)"
      - "traefik.http.routers.fastapi-app-1.entrypoints=web"
      - "traefik.http.services.fastapi-app-1.loadbalancer.server.port=8000"

  api-1-prod:
    <<: *api-1-base
    environment:
      - MODE=production # Production mode uses the image's copied files

  api-1-dev:
    <<: *api-1-base
    environment:
      - MODE=development
    volumes:
      # Mount the local source code directory
      # Override the production files with local files for development
      - .:/app

  x-api-2-base: &api-2-base
    image: fastapi-app-2:latest
    build:
      context: .
      dockerfile: api-2.Dockerfile
    container_name: fastapi-app-2
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi-app-2.rule=Host(`api.localhost`)"
      - "traefik.http.routers.fastapi-app-2.entrypoints=web"
      - "traefik.http.services.fastapi-app-2.loadbalancer.server.port=8001"

  api-2-prod:
    <<: *api-2-base
    environment:
      - MODE=production # Production mode uses the image's copied files

  api-2-dev:
    <<: *api-2-base
    environment:
      - MODE=development
    volumes:
      # Mount the local source code directory
      # Override the production files with local files for development
      - .:/app
  
  db:
    image: postgres:17-bookworm
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:8.0-M02-bookworm
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

volumes:
  db-data:
  redis-data: